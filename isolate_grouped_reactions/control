############################################################
# Configuration file for Isolating Grouping Reactions from 
# Group Reaction Analysis output.
# To use: isolate_group_reactions [this_config_file]
# (Need to run isolate_group_reactions in the same directory 
# as config file.)
# Note: This file will be sourced into a python script so
#       make sure you have correct syntax here.
# $Id$
############################################################

#Grouped Reaction Number that we want to isolate (if set to 'all',
#then all of the grouped reactions will be processed):
isolate_grouped_reaction_number = 0

#Isolate method. There are two options:
#'exact' - Isolates only the defined iterations (and their i+1 iteration,
#          note there may be a potential for duplication in iterations)
#          and the reaction for that iteration. This method is good for
#          greatly reducing the number of atoms we look at. The downside
#          is that it is very specific so it may be difficult to see the
#          big picture.
#'includeall' - Isolates the range of iterations (last iteration in grouped
#               reaction - first iteration in grouped reaction) and not
#               only the specifically defined ones. Also retains all
#               molecules over *all* the iterations. This method is good
#               for examining the whole picture while reducing non-iterac-
#               ting atoms.
#NOTE: Currently, only includeall is implemented.
isolate_method = 'includeall'

#Filename of the grouped reactions input file. Currently set to 
#this filename replacing the .control with .grprxns. 
grprxns_file = 'grprxns.out'

#Appended XYZ input file. For ReaxFF, this is usually the xmolout
#file.
appendedxyz_file = 'xmolout'

#Molecules input file. This is a binary file generated by 
#reax_reactions.
molecules_file = 'mols.out'

#Appended XYZ output file format ([grouped_reaction_number] will
#be replaced by a number):
appendedxyz_output_file = 'grprxn_[grouped_reaction_number].xmolout'
