############################################################
# Configuration file for ReaxFF Automator
# To use: reax_automator [this_config_file]
# (Need to run reax_automator in the same directory as
#  config file.)
# Note: This file will be sourced into a python script so
#       make sure you have correct syntax here.
############################################################

#Filename of the initial structure (in BGF format). Currently set to
#this filename replacing the .auto with .bgf
initial_structure = os.path.splitext(os.path.basename(control_file_path))[0]+'.bgf'

#################################################################################
#Now we define each of our simulations which will occur in the order in which
#they are defined (ie. simulation[0] will occur first, then simulation[1], etc.).
#Things you can use inside of strings (you can define your own below):
#[base_name] - is the initial_structure string minus the end extension
string_substitutions['[base_name]'] = os.path.splitext(initial_structure)[0]
#################################################################################

#Path to folder containing files for this simulation.
simulation[0]['simulation_folder'] = 'templates/em'
#Output folder. Defaults to the name of initial structure without file extension.
simulation[0]['output_folder'] = '[base_name]'
#Final structure name (optional). Creates a name for the final fort.90 file. Naming
#the final structure is a good way of allowing structures to be easily identifiable.
simulation[0]['final_structure_name'] = '[base_name]_em.bgf'

simulation[1]['simulation_folder'] = 'templates/anneal'
simulation[1]['output_folder'] = 'anneal'
simulation[1]['final_structure_name'] = '[base_name]_anneal.bgf'

simulation[2]['simulation_folder'] = 'templates/em'
simulation[2]['output_folder'] = 'em'
simulation[2]['final_structure_name'] = '[base_name]_anneal_em.bgf'
simulation[2]['link_final_structure_to'] = 'final_structures'

#End of simulations
